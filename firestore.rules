rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an Admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Users: Can only read their own user document. Admins can read any.
    match /users/{userId} {
      allow read: if isSignedIn() && (request.auth.uid == userId || isAdmin());
      allow write: if false; // Users are created via server-side logic in signup, not directly
    }
    
    // Allowed Emails: Only admins can read or write.
    match /allowed_emails/{emailId} {
        allow read, write: if isAdmin();
    }

    // Assets, Customers, Events:
    // - Anyone signed in can read.
    // - Anyone signed in can create.
    // - Anyone signed in can update.
    // - Only Admins can delete.
    match /{collection}/{docId} where collection in ['assets', 'customers', 'events'] {
      allow read, create, update: if isSignedIn();
      allow delete: if isAdmin();
    }
  }
}
